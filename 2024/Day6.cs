using System;
using System.Collections.Generic;
using System.Data;
using System.Diagnostics.CodeAnalysis;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AdventOfCode
{
    public class Day6
    {
        private const char CharGuardRight = '>';
        private const char CharGuardUp = '^';
        private const char CharGuardLeft = '<';
        private const char CharGuardDown = 'v';
        private const char CharFree = '.';
        private const char CharObstacle = '#';

        private const string ErrorMessageMultipleGuards = "Map contains more than one guard!";


        public static int Main6(string[] args)
        {
            string input = Day6.Input;
            bool[][] map;
            Pose poseGuardStart;
            string errorMessage;

            if (!Day6.TryParse(input, out map, out poseGuardStart, out errorMessage))
            {
                Console.WriteLine($"Failed to parse map:{Environment.NewLine}'{Environment.NewLine}{input}{Environment.NewLine}'{Environment.NewLine}errorMessage: '{errorMessage}'");
                Console.ReadKey();
                return 1;
            }

            bool[][] patrol = new bool[map.Length][];
            for (int i = 0; i < map.Length; ++i)
            {
                patrol[i] = new bool[map[i].Length];
            }

            // simulate the patrol
            var poseGuard = poseGuardStart.Clone();
            var traps = new HashSet<Pose>();
            while (poseGuard.row >= 0 && poseGuard.row < map.Length
                && poseGuard.col >= 0 && poseGuard.col < map[poseGuard.row].Length)
            {
                patrol[poseGuard.row][poseGuard.col] = true;

                // pretend there is a trap in front of the guard
                Pose trap = poseGuard.Clone();
                trap.Advance(ref map);
                trap.heading = Pose.Heading.Right; // normalize trap heading for hash

                // if the trap is out of bounds
                //   or there is already an obstacle there
                //   or it is at the guard's start position
                //   or a trap opportunity was already identified there
                // don't bother
                if (trap.row < 0 || trap.row >= map.Length || trap.col < 0 || trap.col >= map[trap.row].Length
                 || (trap.row == poseGuard.row && trap.col == poseGuard.col) // turn in-place means trap was in front of guard
                 || !map[trap.row][trap.col]
                 || (trap.row == poseGuardStart.row && trap.col == poseGuardStart.col)
                 || traps.Contains(trap))
                {
                    poseGuard.Advance(ref map);
                    continue;
                }

                // mark the hypothetical trap as impassable
                map[trap.row][trap.col] = false;

                // simulate the guard being trapped and see if there is a cycle
                var trapping = poseGuard.Clone();
                var trappingHash = new HashSet<Pose>();
                while (trapping.row >= 0 && trapping.row < map.Length
                    && trapping.col >= 0 && trapping.col < map[trapping.row].Length)
                {
                    // trapping simulation already having been here indicates a cycle
                    if (trappingHash.Contains(trapping))
                    {
                        // make sure that trap placement would not obstruct the guard from
                        // reaching the trappable pose in the first place
                        if (poseGuardStart.CanReach(poseGuard, ref map))
                        {
                            traps.Add(trap);
                        }
                        break;
                    }

                    trappingHash.Add(trapping.Clone());
                    trapping.Advance(ref map);
                }

                // clear the hypothetical trap for subsequent simulations
                map[trap.row][trap.col] = true;

                poseGuard.Advance(ref map);
            }

            int visited = patrol.Sum(r => r.Count(b => b));
            Console.WriteLine($"visited: {visited}");
            // Console.WriteLine("traps: " + string.Join(", ", traps.Select(t => $"({t.row},{t.col})")));
            Console.WriteLine($"traps: {traps.Count}");
            Console.ReadKey();
            return 0;
        }

        private static bool TryParse(string mapText, out bool[][] map, out Pose poseGuard, out string errorMessage)
        {
            map = null;
            poseGuard = null;
            errorMessage = null;

            var lines = mapText.Split("\r\n");
            if (lines.Length == 0 || lines[0].Length == 0)
            {
                return false;
            }

            map = new bool[lines.Length][];
            bool poseGuardFound = false;

            for (int i = 0; i < lines.Length; ++i)
            {
                map[i] = new bool[lines[i].Length];
                for (int j = 0; j < lines[i].Length; ++j)
                {
                    if (lines[i][j] == Day6.CharFree)
                    {
                        map[i][j] = true;
                    }
                    else if (lines[i][j] == Day6.CharObstacle)
                    {
                        map[i][j] = false;
                    }
                    else if (lines[i][j] == Day6.CharGuardRight)
                    {
                        if (poseGuardFound)
                        {
                            errorMessage = Day6.ErrorMessageMultipleGuards;
                            return false;
                        }

                        map[i][j] = true;
                        poseGuard = new Pose(i, j, Pose.Heading.Right);
                        poseGuardFound = true;
                    }
                    else if (lines[i][j] == Day6.CharGuardUp)
                    {
                        if (poseGuardFound)
                        {
                            errorMessage = Day6.ErrorMessageMultipleGuards;
                            return false;
                        }

                        map[i][j] = true;
                        poseGuard = new Pose(i, j, Pose.Heading.Up);
                        poseGuardFound = true;
                    }
                    else if (lines[i][j] == Day6.CharGuardLeft)
                    {
                        if (poseGuardFound)
                        {
                            errorMessage = Day6.ErrorMessageMultipleGuards;
                            return false;
                        }

                        map[i][j] = true;
                        poseGuard = new Pose(i, j, Pose.Heading.Left);
                        poseGuardFound = true;
                    }
                    else if (lines[i][j] == Day6.CharGuardDown)
                    {
                        if (poseGuardFound)
                        {
                            errorMessage = Day6.ErrorMessageMultipleGuards;
                            return false;
                        }

                        map[i][j] = true;
                        poseGuard = new Pose(i, j, Pose.Heading.Down);
                        poseGuardFound = true;
                    }
                    else
                    {
                        errorMessage = $"Unrecognized map cell: '{lines[i][j]}'";
                        return false;
                    }
                }
            }

            return true;
        }

        private class Pose
        {
            public enum Heading
            {
                None, // customary/important to include in all enums
                Right,
                Up,
                Left,
                Down
            }

            public int row;
            public int col;
            public Heading heading;

            public Pose(int row, int col, Heading heading)
            {
                this.row = row;
                this.col = col;
                this.heading = heading;
            }

            public Pose Clone()
            {
                return new Pose(this.row, this.col, this.heading);
            }

            public bool CanReach(Pose other, ref bool[][] map)
            {
                if (other == null)
                {
                    return false;
                }

                var clone = this.Clone();
                while (clone.row >= 0 && clone.row < map.Length
                    && clone.col >= 0 && clone.col < map[clone.row].Length)
                {
                    if (clone.Equals(other))
                    {
                        return true;
                    }
                    clone.Advance(ref map);
                }

                return false;
            }

            public void Advance(ref bool[][] map, int count = 1)
            {
                for (int i = 0; i < count; ++i)
                {
                    this.Advance(ref map);
                }
            }

            private void Advance(ref bool[][] map)
            {
                if (this.heading == Heading.Right)
                {
                    if (this.col == map[this.row].Length-1 || map[this.row][this.col+1])
                    {
                        ++this.col;
                    }
                    else
                    {
                        this.heading = Heading.Down;
                    }
                    return;
                }

                if (this.heading == Heading.Up)
                {
                    if (this.row == 0 || map[this.row-1][this.col])
                    {
                        --this.row;
                    }
                    else
                    {
                        this.heading = Heading.Right;
                    }
                    return;
                }

                if (this.heading == Heading.Left)
                {
                    if (this.col == 0 || map[this.row][this.col-1])
                    {
                        --this.col;
                    }
                    else
                    {
                        this.heading = Heading.Up;
                    }
                    return;
                }

                if (this.heading == Heading.Down)
                {
                    if (this.row == map.Length-1 || map[this.row+1][this.col])
                    {
                        ++this.row;
                    }
                    else
                    {
                        this.heading = Heading.Left;
                    }
                    return;
                }
            }

            // override this for use with hash table/set
            public override int GetHashCode()
            {
                // obviously this hash algorithm could break down in extremely large maps
                return this.row ^ (this.col * 1000) ^ ((int)this.heading * 1000000);
            }

            // also need to override this for use with hash table/set
            public override bool Equals(object? obj)
            {
                Pose other = obj as Pose;
                return this.Equals(other);
            }
            
            public bool Equals(Pose other)
            {
                if (other == null)
                {
                    return false;
                }

                return this.row == other.row && this.col == other.col && this.heading == other.heading;
            }

            public override string ToString()
            {
                return $"[{this.row},{this.col},{this.heading.ToString()}]";
            }
        }

        private const string Example = "....#.....\r\n.........#\r\n..........\r\n..#.......\r\n.......#..\r\n..........\r\n.#..^.....\r\n........#.\r\n#.........\r\n......#...";
        private const string Input = "............#.............#......................#....#....................................................#..............#.......\r\n..................................#...#......#.......#........#..................#....#...........................##....#.........\r\n...........#...........#...........#...#...#...............................#.......................##....................#........\r\n..................#.............#........#.....................#...........................................................#......\r\n....#............................................................#..#...#......#.#......#...#..........#..#.....#....#...#........\r\n.................................#......##.............................#..........................#...#.........#.................\r\n.#.............#.........#..#..............................................................................##...........#..#......\r\n....#..............#..........................##......#........#...#........#..........#........#.............#...................\r\n.....#.......#..#......#..#..................................................................#.........................#..........\r\n......................#...............................#......#................................#......#.....#......................\r\n.......#.........#.....................................................................#....#.#.....................#.........#...\r\n........................#......##..........#....#..........................#....................#...................#.........#...\r\n................#..#............#...#.................................................................#...........#...............\r\n.#.....#.....................#..........................................#................................#........................\r\n.............#.##........#......#......#......................#..................................................#...#..........#.\r\n.......#.........#.#..........#.............#.......#............#.....................#..........................................\r\n.............................#.........................................................#.........#.........#.............#........\r\n....#..#.#..................................................#...........#..................#....#.................................\r\n...............#..........#.....#..............................................................#..................................\r\n.......##.............................................................................#...............#.........#.................\r\n....#.....#..........................#..........#................................#....................#...#.......................\r\n.#.................................................#..#.....#.....................................................................\r\n...........................#..............#.#...#..........................................#......#..........................#....\r\n.#....#........#....................................................#...........................................#.................\r\n...#..................#................##...#.............#..#....................#...............#...............................\r\n..................................................#......#..........................................................#...#.........\r\n#.#....................................#........#.............................................................#...................\r\n...............................................#.......##...............................................#.........................\r\n...#.............#................................................................................................................\r\n.......................................#....#..#........#............#..........#.........#...#..................#................\r\n........#.................................................#.........................................#...........#.................\r\n...................#...........#...............................#..........................#................#..#..........#.....#..\r\n...............#......#...............................................................#............................##..#.....##...\r\n.........................................##.#..#..................#.......#.....................#.................................\r\n...........#...................................................................#...#..................................#.....#.....\r\n......#...............................#.......###..........................#....#.....................................#...........\r\n.....##...............................#...................................................#................................#...#..\r\n..................#....#.......#.......................................................................##.........................\r\n.....#..#.................................................................................................#.......................\r\n.#.................................#......................##....................................#..........................##.....\r\n#.#................#......................................#...........................#.......#...................................\r\n.................................#.......#.....#..............................................##..#....................#..........\r\n............#...............................................................................#....#...........#..........#.........\r\n................................................##...............................................#..#..........................#..\r\n.................#.......#........................................................................#...............................\r\n..#.........................#......#.............#.......................................#........................................\r\n...............#.............#...........................................................#.....#..................................\r\n.........#...............................................................................#...............................#........\r\n.........................................#...................#.................#.........##........#.........#....................\r\n............#..........#.....#................................................................#...##............................#.\r\n........#...#....#..............................................#..............#........................#.........................\r\n..#.....................................................................................................................#.........\r\n.#....#.............................^................#..#...................#.........................#...........................\r\n..........................................................................#.........#....#......#.................................\r\n.........#................................#.#........................#.................#...................................#......\r\n.............................................#.##............................................................#......#..#.........#\r\n..........#............#...........#..#......#..........#.........................................................................\r\n......................#....................................#....#.............##....#.............................................\r\n......................#...#............#.......................................................................................#..\r\n.##.................#.......................#...............#.............#......#..................................#.....#.#.....\r\n....................#........#.......................#....................................#.......#...#.......#.......#......#....\r\n.............................................................#.......................#..........................#.....#...........\r\n...#.................#.......................................................#.......##...........#.......#.......................\r\n...............##.........................#.........................................................#.....#.......#...............\r\n.......................#.......................#.........#..............#....................#..........#........................#\r\n...................................##..........#..........................................................#.........#.............\r\n..................#...............................#...................................#.......#.......................#...........\r\n.......................#..#...................................#........................#........#............#....................\r\n...................................#....#............#..................#........................................#..........#.....\r\n.............#...#...#......#.............##...............................................#..........................#....#......\r\n....................#..........................................#....#......................................................#......\r\n............#.........#...............#..#.....................................................................#.#................\r\n.......................#..#..............................................................#.....#........#..#..................#...\r\n.............#..#..............................#.....#.................#.............#.......................#................#...\r\n...............#......#...........#............#.........#......................................#.................................\r\n............................#.....#.........#.....#..#...........#................................................................\r\n....#.......#.................#..............................................#.......#.#.............................#...#..#.....\r\n..................................................#.#......#............................................................#.........\r\n..................................#............#........................#.......#.........#...#...............#...................\r\n............##....#.#......#..............................................................................#..............#........\r\n.....#..........................................#.........................................................#........##.............\r\n............#.....................#..#.#..............#........#......#.............................#....#...#....................\r\n.......................#...........................................................................#..............................\r\n......#.........................................#........#............#..#..............................#.#.......................\r\n#.#......#..#...............#...........#....#.................................................#..................................\r\n.........#...........#............................#..............#......................#.......................................#.\r\n...#............#..................................#..............#............................#.........................#........\r\n...##..#.....................................................................................#...........................#........\r\n...............#......#.........#................................#...#............#....................#..........................\r\n..........................#...........................#..............................................#................#....#......\r\n.........#........#.#...........................................................................#..#..............................\r\n.................#..............#........................................................................#.................#......\r\n...#.........#.#.........#.#...........................................#........#........#.........#..............................\r\n..........#............................................................#..........#.....#.........................................\r\n..................................#.....#...........##........#......#..........#..........................#......................\r\n...........................#....#.............#............................................................#......................\r\n.............#.......#...................................#.....#............................................................##....\r\n............#..............##.............#.....#...............#..........#........................#.........................#...\r\n..##.....................................................................................................#........................\r\n.............#.#...........#...................#....#...#......#................##................................................\r\n.................#.#............#........................#.......##..#.........##.................................................\r\n......................#.#...#................................................................#...............#.....#...........#..\r\n#.................#..........................#.............................##.....#...........................................#...\r\n..............#.........#.................#................................................................................#......\r\n....#.#............#.......#.......................#.....#.......................#....................#.....#.............#.......\r\n......................#..#....#.........................................#.#............##............#............................\r\n.........#.#...#...#........................................#...............................................#....................#\r\n.......................#...................#.............................................................#.......................#\r\n................#............................#........#..........#.......................##....#..................................\r\n.#...................#......................#.......................................#............................#................\r\n..#..##.......#......#..........#..#..................................................#...........................................\r\n..............#..........#...........................................#.........##.................................................\r\n....#..............................#.........#...#.................#......#.#.......#.............................................\r\n#.................................#........#.....................................#...##...................#..#...........#........\r\n.......#.....#.............................................#..................#...................#...........#..#........#.......\r\n.......................#................#.............#.#.........#..............................................................#\r\n......................................................#....................#..........#................................#..........\r\n#...............#...#.............#.................#.................................................#...........................\r\n..................................................................#.........................#......#.........#............##......\r\n#.................#........#.......#...#....................................#.#...................................................\r\n.....................................#...#....#.........#................#.........................................#...#..........\r\n............#............................#.............#.#........................................................................\r\n......................................#.................................................#...............#.......#.................\r\n.#.#..........#........#.......................#..................................................#....................#..........\r\n....#...............................................................#...........#............#.......................#............\r\n....#.......#.#..#...................#.........#..................................#....................................#..........\r\n..............................................#...................................##.......#......................................\r\n#...#.#............#...............................#.........#...........#..........#............................................#\r\n..#...........#..#..........#.......................#..........##.................................................................\r\n...#.....#..................................#................................................#....................................";
    }
}
